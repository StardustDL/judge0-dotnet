name: CI

on:
  push:
  pull_request:

defaults:
  run:
    shell: pwsh

env:
  dotnet-version: "3.1.x"
  build_version: "0.0.3.${{ github.run_number }}-preview"

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        apiVersion: ["1.9.0", "1.8.0", "1.7.1", "1.7.0", "1.6.0"]
        experimental: [false]
        include:
          - apiVersion: "1.5.0"
            experimental: true
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnet-version }}
    - name: Setup psake
      run: Set-PSRepository -Name PSGallery -InstallationPolicy Trusted; Install-Module -Name psake
    - name: Start API Server
      env:
        VERSION: ${{ matrix.apiVersion }}
      run: |
        cd test/docker/$env:VERSION
        docker-compose up -d db redis
        sleep 10s
        docker-compose up -d
        sleep 5s
    - name: CI
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.AZ_TOKEN }}
        Test_Server_Key: ${{ secrets.Test_Server_Key }}
      run: Invoke-psake ci -parameters @{ "NUGET_AUTH_TOKEN" = $env:NUGET_AUTH_TOKEN ; "build_version" = $env:build_version }
    - name: Upload reports
      uses: actions/upload-artifact@v2
      with:
        name: ci-${{ matrix.apiVersion }}
        path: ./reports
  invoke-cd:
    needs: ci
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
    - name: Repository Dispatch
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.PA_TOKEN }}
        event-type: cd
